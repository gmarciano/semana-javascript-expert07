/* eslint-disable no-magic-numbers */

module.exports = {
	env: {
		es2022: true,
		node: true,
		browser: true,
	},
	overrides: [],
	parserOptions: {
		ecmaVersion: 'latest',
		sourceType: 'module',
	},
	ignorePatterns: ['**/lib/*'],
	rules: {
		'linebreak-style': ['error', 'unix'],
		quotes: ['error', 'single'],
		semi: ['error', 'always'],
		'accessor-pairs': 'error',
		'arrow-body-style': ['error', 'as-needed'],
		'block-scoped-var': 'error',
		'consistent-this': ['error', 'that'],
		'default-case': 'error',
		'default-case-last': 'error',
		'default-param-last': ['error'],
		'dot-notation': 'error',
		eqeqeq: 'error',
		'grouped-accessor-pairs': 'error',
		'max-classes-per-file': ['error', 1],
		'max-depth': ['error', 3],
		'max-lines': ['error', 500],
		'max-nested-callbacks': ['error', 3],
		'max-params': ['error', 10],
		'no-bitwise': 'error',
		'no-confusing-arrow': 'error',
		'no-delete-var': 'error',
		'no-empty': 'error',
		'no-empty-function': ['error', { allow: ['constructors', 'methods'] }],
		'no-empty-static-block': 'error',
		'no-eval': 'error',
		'no-extra-boolean-cast': 'error',
		'no-extra-semi': 'error',
		'no-floating-decimal': 'error',
		'no-implicit-coercion': 'error',
		'no-inline-comments': 'error',
		'no-invalid-this': 'error',
		'no-loop-func': 'error',
		'no-multi-assign': 'error',
		'no-multi-str': 'error',
		'no-nested-ternary': 'error',
		'no-new': 'error',
		'no-new-object': 'error',
		'no-param-reassign': 'error',
		'no-redeclare': 'error',
		'no-return-assign': 'error',
		'no-return-await': 'error',
		'no-unneeded-ternary': 'error',
		'no-useless-computed-key': 'error',
		'no-useless-concat': 'error',
		'no-useless-escape': 'error',
		'no-useless-rename': 'error',
		'no-var': 'error',
		'object-shorthand': ['error', 'always', { avoidQuotes: true }],
		'one-var-declaration-per-line': ['error', 'always'],
		'operator-assignment': ['error', 'always'],
		'prefer-const': 'error',
		'prefer-destructuring': [
			'error',
			{
				array: false,
				object: true,
			},
		],
		'prefer-object-has-own': 'error',
		'prefer-object-spread': 'error',
		'prefer-promise-reject-errors': 'error',
		'prefer-template': 'error',
		'require-await': 'error',
		'sort-imports': [
			'error',
			{
				ignoreCase: true,
				ignoreDeclarationSort: true,
				ignoreMemberSort: true,
				allowSeparatedGroups: true,
			},
		],
		'spaced-comment': ['error', 'always'],
		yoda: 'error',
		'array-bracket-newline': [
			'error',
			{
				multiline: true,
				minItems: 3,
			},
		],
		'array-bracket-spacing': ['error', 'never'],
		'array-element-newline': [
			'error',
			{
				multiline: true,
				minItems: 3,
			},
		],
		'arrow-spacing': ['error', { before: true, after: true }],
		'block-spacing': ['error', 'always'],
		'brace-style': ['error', '1tbs', { allowSingleLine: false }],
		'comma-dangle': ['error', 'always-multiline'],
		'comma-spacing': ['error', { before: false, after: true }],
		'comma-style': ['error', 'last'],
		'dot-location': ['error', 'property'],
		'func-call-spacing': ['error', 'never'],
		'function-call-argument-newline': ['error', 'consistent'],
		'function-paren-newline': ['error', 'multiline'],
		'keyword-spacing': ['error', { before: true, after: true }],
		'line-comment-position': ['error', { position: 'above' }],
		'max-len': ['error', { code: 200 }],
		'max-statements-per-line': ['error', { max: 1 }],
		'newline-per-chained-call': ['error', { ignoreChainWithDepth: 2 }],
		'no-mixed-spaces-and-tabs': 'error',
		'no-multi-spaces': 'error',
		'no-multiple-empty-lines': 'error',
		'no-trailing-spaces': 'error',
		'no-whitespace-before-property': 'error',
		'nonblock-statement-body-position': ['error', 'beside'],
		'object-curly-newline': ['error', { multiline: true, minProperties: 5 }],
		'object-curly-spacing': ['error', 'always'],
		'object-property-newline': ['error', { allowAllPropertiesOnSameLine: true }],
		'operator-linebreak': ['error', 'before'],
		'padded-blocks': ['error', 'never'],
		'semi-style': ['error', 'last'],
		'space-before-blocks': 'error',
		'space-before-function-paren': [
			'error',
			{
				anonymous: 'always',
				named: 'never',
				asyncArrow: 'always',
			},
		],
		'space-in-parens': ['error', 'never'],
	},
};
